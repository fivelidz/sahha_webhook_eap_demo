"use strict";(()=>{var e={};e.id=208,e.ids=[208],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},86247:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>g,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var o={};s.r(o),s.d(o,{POST:()=>u});var r=s(49303),n=s(88716),a=s(60670),i=s(87070),c=s(29712);async function u(e){try{let{clientId:t,clientSecret:s,apiBaseUrl:o}=await e.json();if(!t||!s)return i.NextResponse.json({success:!1,error:"Client ID and Client Secret are required"},{status:400});let r=o||"https://sandbox-api.sahha.ai";console.log("\uD83D\uDD0D Testing Sahha connection...");let n=await c.Z.post(`${r}/api/v1/oauth/account/token`,{clientId:t,clientSecret:s},{headers:{"Content-Type":"application/json"},timeout:1e4});if(!n.data||!n.data.accountToken)return i.NextResponse.json({success:!1,error:"Authentication succeeded but no token received"},{status:500});{let e=n.data.accountToken;console.log("✅ Authentication successful");try{let t=(await c.Z.get(`${r}/api/v1/account/profile/search`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},params:{pageSize:5,currentPage:1},timeout:1e4})).data.items||[];return console.log(`✅ Profile access successful - found ${t.length} profiles`),i.NextResponse.json({success:!0,message:`✅ Connection successful! Found ${t.length} profiles`,tokenLength:e.length,profileCount:t.length,apiUrl:r})}catch(t){return console.log("⚠️ Auth successful but profile access limited"),i.NextResponse.json({success:!0,message:"✅ Authentication successful, but profile access may be limited",tokenLength:e.length,warning:"Could not access profiles - check permissions",apiUrl:r})}}}catch(s){console.error("❌ Connection test failed:",s.message);let e="Connection failed",t=500;if(s.response)switch(t=s.response.status,s.response.status){case 401:e="Invalid credentials - check your Client ID and Client Secret";break;case 403:e="Access forbidden - check your account permissions";break;case 404:e="API endpoint not found - check your API base URL";break;case 429:e="Rate limit exceeded - try again later";break;default:e=`API error: ${s.response.status} ${s.response.statusText}`}else"ECONNREFUSED"===s.code?e="Cannot connect to Sahha API - check your network and API URL":"ENOTFOUND"===s.code?e="API hostname not found - check your API base URL":"ETIMEDOUT"===s.code&&(e="Connection timeout - Sahha API is not responding");return i.NextResponse.json({success:!1,error:e,details:s.message,timestamp:new Date().toISOString()},{status:t})}}let p=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/test-connection/route",pathname:"/api/test-connection",filename:"route",bundlePath:"app/api/test-connection/route"},resolvedPagePath:"/home/fivelidz/sahha_work/sahha-marketing-intelligence/projects/EAP/deployment-package/app/api/test-connection/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:h}=p,g="/api/test-connection/route";function m(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),o=t.X(0,[276,972,712],()=>s(86247));module.exports=o})();